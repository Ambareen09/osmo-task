import { Params } from "./params";
import { SuperfluidAsset, OsmoEquivalentMultiplierRecord, SuperfluidIntermediaryAccount, LockIdIntermediaryAccountConnection } from "./superfluid";
import * as _m0 from "protobufjs/minimal";
import { isSet } from "../../helpers";
/** GenesisState defines the module's genesis state. */

function createBaseGenesisState() {
  return {
    params: undefined,
    superfluidAssets: [],
    osmoEquivalentMultipliers: [],
    intermediaryAccounts: [],
    intemediaryAccountConnections: []
  };
}
export const GenesisState = {
  encode(message, writer = _m0.Writer.create()) {
    if (message.params !== undefined) {
      Params.encode(message.params, writer.uint32(10).fork()).ldelim();
    }
    for (const v of message.superfluidAssets) {
      SuperfluidAsset.encode(v, writer.uint32(18).fork()).ldelim();
    }
    for (const v of message.osmoEquivalentMultipliers) {
      OsmoEquivalentMultiplierRecord.encode(v, writer.uint32(26).fork()).ldelim();
    }
    for (const v of message.intermediaryAccounts) {
      SuperfluidIntermediaryAccount.encode(v, writer.uint32(34).fork()).ldelim();
    }
    for (const v of message.intemediaryAccountConnections) {
      LockIdIntermediaryAccountConnection.encode(v, writer.uint32(42).fork()).ldelim();
    }
    return writer;
  },
  decode(input, length) {
    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseGenesisState();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.params = Params.decode(reader, reader.uint32());
          break;
        case 2:
          message.superfluidAssets.push(SuperfluidAsset.decode(reader, reader.uint32()));
          break;
        case 3:
          message.osmoEquivalentMultipliers.push(OsmoEquivalentMultiplierRecord.decode(reader, reader.uint32()));
          break;
        case 4:
          message.intermediaryAccounts.push(SuperfluidIntermediaryAccount.decode(reader, reader.uint32()));
          break;
        case 5:
          message.intemediaryAccountConnections.push(LockIdIntermediaryAccountConnection.decode(reader, reader.uint32()));
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },
  fromJSON(object) {
    return {
      params: isSet(object.params) ? Params.fromJSON(object.params) : undefined,
      superfluidAssets: Array.isArray(object === null || object === void 0 ? void 0 : object.superfluidAssets) ? object.superfluidAssets.map(e => SuperfluidAsset.fromJSON(e)) : [],
      osmoEquivalentMultipliers: Array.isArray(object === null || object === void 0 ? void 0 : object.osmoEquivalentMultipliers) ? object.osmoEquivalentMultipliers.map(e => OsmoEquivalentMultiplierRecord.fromJSON(e)) : [],
      intermediaryAccounts: Array.isArray(object === null || object === void 0 ? void 0 : object.intermediaryAccounts) ? object.intermediaryAccounts.map(e => SuperfluidIntermediaryAccount.fromJSON(e)) : [],
      intemediaryAccountConnections: Array.isArray(object === null || object === void 0 ? void 0 : object.intemediaryAccountConnections) ? object.intemediaryAccountConnections.map(e => LockIdIntermediaryAccountConnection.fromJSON(e)) : []
    };
  },
  toJSON(message) {
    const obj = {};
    message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);
    if (message.superfluidAssets) {
      obj.superfluidAssets = message.superfluidAssets.map(e => e ? SuperfluidAsset.toJSON(e) : undefined);
    } else {
      obj.superfluidAssets = [];
    }
    if (message.osmoEquivalentMultipliers) {
      obj.osmoEquivalentMultipliers = message.osmoEquivalentMultipliers.map(e => e ? OsmoEquivalentMultiplierRecord.toJSON(e) : undefined);
    } else {
      obj.osmoEquivalentMultipliers = [];
    }
    if (message.intermediaryAccounts) {
      obj.intermediaryAccounts = message.intermediaryAccounts.map(e => e ? SuperfluidIntermediaryAccount.toJSON(e) : undefined);
    } else {
      obj.intermediaryAccounts = [];
    }
    if (message.intemediaryAccountConnections) {
      obj.intemediaryAccountConnections = message.intemediaryAccountConnections.map(e => e ? LockIdIntermediaryAccountConnection.toJSON(e) : undefined);
    } else {
      obj.intemediaryAccountConnections = [];
    }
    return obj;
  },
  fromPartial(object) {
    var _object$superfluidAss, _object$osmoEquivalen, _object$intermediaryA, _object$intemediaryAc;
    const message = createBaseGenesisState();
    message.params = object.params !== undefined && object.params !== null ? Params.fromPartial(object.params) : undefined;
    message.superfluidAssets = ((_object$superfluidAss = object.superfluidAssets) === null || _object$superfluidAss === void 0 ? void 0 : _object$superfluidAss.map(e => SuperfluidAsset.fromPartial(e))) || [];
    message.osmoEquivalentMultipliers = ((_object$osmoEquivalen = object.osmoEquivalentMultipliers) === null || _object$osmoEquivalen === void 0 ? void 0 : _object$osmoEquivalen.map(e => OsmoEquivalentMultiplierRecord.fromPartial(e))) || [];
    message.intermediaryAccounts = ((_object$intermediaryA = object.intermediaryAccounts) === null || _object$intermediaryA === void 0 ? void 0 : _object$intermediaryA.map(e => SuperfluidIntermediaryAccount.fromPartial(e))) || [];
    message.intemediaryAccountConnections = ((_object$intemediaryAc = object.intemediaryAccountConnections) === null || _object$intemediaryAc === void 0 ? void 0 : _object$intemediaryAc.map(e => LockIdIntermediaryAccountConnection.fromPartial(e))) || [];
    return message;
  },
  fromAmino(object) {
    return {
      params: object !== null && object !== void 0 && object.params ? Params.fromAmino(object.params) : undefined,
      superfluidAssets: Array.isArray(object === null || object === void 0 ? void 0 : object.superfluid_assets) ? object.superfluid_assets.map(e => SuperfluidAsset.fromAmino(e)) : [],
      osmoEquivalentMultipliers: Array.isArray(object === null || object === void 0 ? void 0 : object.osmo_equivalent_multipliers) ? object.osmo_equivalent_multipliers.map(e => OsmoEquivalentMultiplierRecord.fromAmino(e)) : [],
      intermediaryAccounts: Array.isArray(object === null || object === void 0 ? void 0 : object.intermediary_accounts) ? object.intermediary_accounts.map(e => SuperfluidIntermediaryAccount.fromAmino(e)) : [],
      intemediaryAccountConnections: Array.isArray(object === null || object === void 0 ? void 0 : object.intemediary_account_connections) ? object.intemediary_account_connections.map(e => LockIdIntermediaryAccountConnection.fromAmino(e)) : []
    };
  },
  toAmino(message) {
    const obj = {};
    obj.params = message.params ? Params.toAmino(message.params) : undefined;
    if (message.superfluidAssets) {
      obj.superfluid_assets = message.superfluidAssets.map(e => e ? SuperfluidAsset.toAmino(e) : undefined);
    } else {
      obj.superfluid_assets = [];
    }
    if (message.osmoEquivalentMultipliers) {
      obj.osmo_equivalent_multipliers = message.osmoEquivalentMultipliers.map(e => e ? OsmoEquivalentMultiplierRecord.toAmino(e) : undefined);
    } else {
      obj.osmo_equivalent_multipliers = [];
    }
    if (message.intermediaryAccounts) {
      obj.intermediary_accounts = message.intermediaryAccounts.map(e => e ? SuperfluidIntermediaryAccount.toAmino(e) : undefined);
    } else {
      obj.intermediary_accounts = [];
    }
    if (message.intemediaryAccountConnections) {
      obj.intemediary_account_connections = message.intemediaryAccountConnections.map(e => e ? LockIdIntermediaryAccountConnection.toAmino(e) : undefined);
    } else {
      obj.intemediary_account_connections = [];
    }
    return obj;
  }
};